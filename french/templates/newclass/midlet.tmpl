$PKGLINE

import javax.microedition.midlet.MIDlet;

/**
 * Classe $CLASSNAME - D\u00e9crivez votre classe Midlet ici
 *
 * @author     Votre nom ici
 * @version    Un num\u00e9ro de version ou une date
 */
public class $CLASSNAME extends MIDlet
{
    /**
     * Appel\u00e9 par le logiciel de Gestion des applications
     * (Application Management Software (AMS)) quand le MIDlet d\u00e9marre.
     * L'AMS est le logiciel qui g\u00e8re le cycle de vie des MIDlets.
     * Quand ce constructeur retourne quelque chose, l'AMS positionne
     * cette MIDlet \u00e0 l'\u00e9tat Pause.
     */
    public $CLASSNAME()
    {
        // Fournit toute l'initialisation n\u00e9cessaire au MIDlet
    }

    /**
     * Appel\u00e9 par l'AMS pour basculer le MIDlet de l'\u00e9tat Pause \u00e0 l'\u00e9tat
     * Actif. Tant que le MIDlet est actif, l'AMS peut suspendre son ex\u00e9cution
     * en appelant pauseApp().
     */
    public void startApp()
    {
        // Alloue les ressources n\u00e9cessaires telles que les connexions r\u00e9seaux.
    }

    /**
     * Appel\u00e9 par l'AMS pour basculer le MIDlet de l'\u00e9tat Actif \u00e0 l'\u00e9tat
     * Pause. Tant que le MIDlet est \u00e0 l'\u00e9tat Pause, l'AMS peut reprendre son
     * ex\u00e9cution par l'appel \u00e0 la m\u00e9thode startApp().
     * Il est possible de faire ce basulement autant de fois qu'on le souhaite.
     */
    public void pauseApp()
    {
        // Lib\u00e8re les ressources partag\u00e9es qui ont \u00e9t\u00e9 allou\u00e9es dans startApp().
    }

    /**
     * Invoqu\u00e9 par l'AMS pour finir l'ex\u00e9cution du MIDlet.
     * Une fois termin\u00e9e, le MIDlet passe \u00e0 l'\u00e9tat D\u00e9truit
     *
     * @param unconditional   Destruction inconditionnelle? Si \u00e0 true alors le
     *                        MIDlet va passer \u00e0 l'\u00e9tat d\u00e9truit quelle que soit
     *                        la fa\u00e7on dont la m\u00e9thode se termine. Si \u00e0 false
     *                        le MIDlet peut lancer une MIDletStateChangeException
     *                        pour pr\u00e9venir qu'il n'est actuellement pas d\u00e9truit.
     */
    public void destroyApp(boolean unconditional)
    {
        // Lib\u00e8re les ressources acquises dans le constructeur.
    }
}
